
name: Deploy to Staging

on:
  push:
    branches: [develop, staging]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_africanmarket
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: 'app/yarn.lock'

      - name: Install dependencies
        working-directory: ./app
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client
        working-directory: ./app
        run: yarn prisma generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_africanmarket

      - name: Run TypeScript checks
        working-directory: ./app
        run: yarn tsc --noEmit

      - name: Build application
        working-directory: ./app
        run: yarn build
        env:
          NODE_ENV: staging
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_africanmarket
          NEXTAUTH_SECRET: staging-secret-key-for-ci-cd
          NEXTAUTH_URL: http://localhost:3000

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./app
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--env NODE_ENV=staging'

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Staging deployment completed! Preview: https://staging.africanmarket.vercel.app'
            })
